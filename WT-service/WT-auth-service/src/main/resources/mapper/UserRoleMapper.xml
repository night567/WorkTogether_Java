<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.szu.auth.mapper.UserRoleMapper">

    <resultMap id="BaseResultMap" type="cn.edu.szu.auth.domain.UserRole">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="roleId" column="role_id" jdbcType="BIGINT"/>
            <result property="userId" column="user_id" jdbcType="BIGINT"/>
            <result property="createUser" column="create_user" jdbcType="BIGINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,role_id,user_id,
        create_user,create_time
    </sql>

    <select id="getAllResourceIdsByUserId" resultType="java.lang.String">
        SELECT re.url
        FROM wt_auth.wt_auth_user_role ur
                 INNER JOIN wt_auth.wt_auth_role r ON ur.role_id = r.id
                 INNER JOIN wt_auth.wt_auth_role_authority ra ON r.id = ra.role_id
                 INNER JOIN wt_auth.wt_auth_resource re ON ra.authority_id = re.id
        WHERE ur.user_id = #{id}
          AND r.company_id = #{companyId}
          AND ra.authority_type = 'RESOURCE';
    </select>

    <select id="getRolesByUserId" resultType="cn.edu.szu.auth.domain.AuthRole">
        SELECT r.id,
               r.name,
               r.code,
               r.describe,
               r.company_id  AS companyId,
               r.status,
               r.readonly,
               r.create_user AS createUser,
               r.create_time AS createTime,
               r.is_deleted
        FROM wt_auth.wt_auth_user_role ur
                 JOIN wt_auth.wt_auth_role r ON ur.role_id = r.id
        WHERE ur.user_id = #{userId}
          AND r.company_id = #{companyId}
    </select>
</mapper>
